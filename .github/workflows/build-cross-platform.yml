# This workflow builds on push to main using nuitka for Windows and Linux

name: Build Cross-Platform

on:
  push:
    branches:
      - main
permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    needs: generate-nightly-version
    env:
      NUITKA_CACHE_DIR: ${{ runner.temp }}/nuitka_cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ hashFiles('**/build_requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install ccache
      run: |
        curl -L -o ccache.zip https://github.com/ccache/ccache/releases/download/v4.7.4/ccache-4.7.4-windows.zip
        powershell Expand-Archive ccache.zip -DestinationPath ccache-win
    - run: echo "::add-path::$PWD/ccache-win"

      - name: Cache Nuitka compile cache
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/nuitka_cache
        key: nuitka-${{ runner.os }}-${{ runner.arch }}
        restore-keys: |
          nuitka-${{ runner.os }}-${{ runner.arch }}-


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r build_requirements.txt
          pip install nuitka
      
      - name: Inject nightly version into script
        shell: powershell
        run: |
          (Get-Content "The Bibites Mod Manager.py") -replace '__VERSION__', '${{ needs.generate-nightly-version.outputs.version }}' | Set-Content "The Bibites Mod Manager.py"

      - name: Build TBMM for Windows
        run: |
          nuitka --onefile --windows-console-mode=disable --windows-icon-from-ico="Images\TBMM icon.ico" --include-data-dir="Images=Images" --enable-plugin=tk-inter --assume-yes-for-downloads "The Bibites Mod Manager.py"

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: TBMM-Windows
          path: The Bibites Mod Manager.exe

  build-linux:
    needs: generate-nightly-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/build_requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-
      
      - name: Cache Nuitka
        uses: actions/cache@v4
        with:
          path: ~/.cache/Nuitka
          key: nuitka-${{ runner.os }}
          restore-keys: |
            nuitka-${{ runner.os }}-

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y python3-tk ccache
          python -m pip install --upgrade pip
          pip install -r build_requirements.txt
          pip install nuitka

      - name: Inject nightly version into script
        run: |
          sed -i "s/__VERSION__/${{ needs.generate-nightly-version.outputs.version }}/" "The Bibites Mod Manager.py"

      - name: Build TBMM for Linux
        run: |
          nuitka --onefile --include-data-dir="Images=Images" --enable-plugin=tk-inter --assume-yes-for-downloads "The Bibites Mod Manager.py"

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: TBMM-Linux
          path: The\ Bibites\ Mod\ Manager.bin

  generate-nightly-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set nightly version
        id: set-version
        run: |
          VERSION=nightly-$(date +'%Y%m%d%H%M%S')
          echo "$VERSION" > version.txt
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Commit and push nightly version
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git add version.txt "The Bibites Mod Manager.py"
          git commit -m "Nightly build: update version to ${{ steps.set-version.outputs.version }}" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}